[
["index.html", "(Very) basic steps to weight a survey sample Welcome to the introduction on how to weight a survey sample", " (Very) basic steps to weight a survey sample An explained example with R code - V0.3 Josep Espasa Reig 2017-06-29 Welcome to the introduction on how to weight a survey sample This guide was written by Josep Espasa. You can visit the GitHub repository for this site "],
["introduction.html", "1 Introduction", " 1 Introduction 1.0.1 Aim of this guide and further readings This is a short introductory guide that shows the basic procedures to weight a survey. Please keep in mind that there are many different ways of doing this. This guide intends to be a practical document and a step-by-step walkthrough for weighting a survey. It provides R code for all actions: from reading, manipulating and presenting data to modelling and callibration. This should allow readers to reproduce procerudes and results as well as to inspect objects at any given part of this guide. The source code in an ‘R notebook’ format can be found and publicly accessed from the author’s github page. It is important to note that this is not an ‘R tutorial’. Thus, the guide does not provide a detailed comment on general functions used in this walk-through. Some intermediate ‘R’ skills might be requiered to follow all steps of the procedure. Readers with basic or no knowledge of ‘R’ can still benefit from this note as it explains the steps and principles behind weighting. For questions, clarifications or suggestions feel free to contact him at jespasareig at gmail.com. It is relevant to say that this text intentionally avoids explaining complex or advanced methods. Instead, it aims at providing users with a standard way of weighting and a limited number of variations. Next sections will first give a very broad glimpse at all main survey weighting steps.The second section deals with importing data into R, data manipulation and briefly presenting the dataset used for this guide. Readers interested in a specific step, familiar with the 7th round of the European Social Survey or that want to jump directly into weighting procedures can skip this part of the guide. The three sections are the main components of this guide and show how to compute design weights, non-response weights and calibration weights. Two more sections will be added to this survey in the future. These correspond to the analysis of weight variability and computing weighted estimates. For more information you can check the following introductory texts: Valliant et al. (2013) Practical Tools for Designing and Weighting Survey Samples. New York: Springer Science Business Media. Lohr,S.L. (2009) Sampling: Design and Analysis. 2nd Edition. Boston: Books/Cole. Blair, E. &amp; Blair, J. (2015) Applied Survey Sampling. London: SAGE Publications Inc. And the book accompaining the R ‘survey’ package: Lumley,T. (2010) Complex Surveys: A Guide to Analysis Using R. New Jersey: John Wiley &amp; Sons Inc. It might be also worth keeping an eye on the (still incipient) R package srvyr, developed and maintained by Greg Freedman Ellis. Note: This guide focuses on surveys based on ‘probability sample’. These are surveys where all units in our statistical population have a chance of being selected and the probability of selection is known to the researcher. A brief note on how to weight non-probability samples is included at the end of the guide. 1.0.2 Basic steps in weighting a survey Weights are applied to reduce survey bias. In plain words, weighting consists on making our sample of survey respondents (more) representative of our statistical population. By statistical population we mean all those units for which we want to compute estimates. There are four basic steps in weighting. These are: Base/design weights Non-response weights Use of auxiliary data/calibration Analysis of weight variability/trimming The first step consists on computing weights to take into account the differences of units in the probability of being sampled. ‘Being sampled’ means being selected from the survey frame (i.e. the list of all units) to be approached for a survey response. This step can be skipped if all units in the survey frame have the same probability of being sampled. This happens, for example: * when all units in the survey frame are approached for the sample or; * with certain sampling designs (such as ‘simple random sampling without replacement’ or ‘stratified random sampling without replacement’ with distribution of sampled units across stratums proportional to the number of units in each stratum). These are usually called ‘self-weighted’ surveys. In the second step we need to adjust our responses by the differences in the probability of sampled units to reply to our survey. Our estimates would be biased if some profile of sampled units had higher propensity to reply than another and these profiles had differences in the dependent variables (i.e. our variables of interest). In this step, we need to estimate the probability of response using information available for both respondents and non-respondents. Non-response adjustment is not needed if all sampled units responded to the survey (i.e. in probability sampling surveys with 100% response rates). The third step consists on adjusting our weights using available information about total population estimates. Note that this requieres data that is different from that needed in non-response adjustment (second step). Here we need auxiliary data which tells us information (i.e. estimates such as proportions, means, sums, counts) about the statistical population. The same variables should be available from our respondents but here we don’t need information about non-respondents. The last step is to check the variablity in our computed weights. High variation in weights can lead to some observations having too much importance in our sample. Even if weights reduce bias, they might largely inflate variance of estimates. Therefore, some survey practitioners worry about dealing with highly unequal weights. "],
["import-data-management.html", "2 Import data and data management", " 2 Import data and data management library(RCurl) library(MASS) library(glmnet) library(caret) library(survey) library(readxl) library(stringr) library(forcats) library(foreign) library(magrittr) library(tidyverse) options(scipen = 9999) options(dplyr.width = Inf) set.seed(456162) We first need to import data into R. In this guide we will use UK data from the 7th round of the European Social Survey. The advantage of this data is that the European Social Survey (ESS) is a well documented and high quality probability survey. It allows us to understand how responses were collected and provides some useful information about non-respondents. At the same time, the 7th ESS was weighted by expert statisticians. The process of the two phases of weighting they applied is explained in their website. This will allow us to compare our own weights and results with those already computed by their team of experts. Focusing on the UK sample will allow us to narrow down the analysis and fasten computation by reducing the amount of data used in each step. For this guide we will use the following 7th ESS datafiles in SPSS (‘.sav’) format: sample data (SDDF), edition 1.1, which contains the probability of being sampled for all respondents and non-respondents invited to the survey; the data from Contact forms, edition 2.1, which provides information about the process of data collection (e.g. number of times the person was approached for a response, ID of interviewer in each approach, conditions of the house/area where the potential respondent lived.). We will call this data the ‘paradata’ of the survey; the integrated interviewer data file, edition2.1. These are the responses to the survey. The following sections explain data import, selection, merging and recoding. Readers who are not interested in technical details about datasets can skip them and jump directly into exploration and presentation of the data 2.0.0.1 Import data The following chunk of code loads the data sets from a data folder in the working directory. The sample data file is stored into the sample.data ‘data_frame’ object. The contact forms information is stored into the paradata folder. Survey responses from the integrated interviewer file are saved in the responses object. We also store the weight variables included in the integrated interviewer file in the original.weights data_frame. sample.data &lt;- read.spss(&quot;data/ESS7SDDFe1_1.sav&quot;, to.data.frame = T) %&gt;% filter(cntry == &quot;United Kingdom&quot;) paradata &lt;- read.spss(&quot;data/ess7CFe02_1.sav&quot;, to.data.frame = T) %&gt;% filter(cntry == &quot;United Kingdom&quot;) responses &lt;- read.spss(&quot;data/ESS7e02_1.sav&quot;, to.data.frame = T) %&gt;% filter(cntry == &quot;United Kingdom&quot;) original.weights &lt;- responses %&gt;% select(idno ,dweight, pspwght, pweight) 2.0.0.2 Select variables Once the data has been read into R, we select the variables we are going to use in our analysis. Selecting variables is a good practice as the ESS files contain much more information that we need for this example. This will allow us to easily find and see the data that is important for us in this guide. Here we just write the names of the variables we intend to use and we will later explain the content of these in more substantial terms. vars.sample.data &lt;- c(&quot;idno&quot;, &quot;psu&quot;, &quot;prob&quot;) vars.paradata &lt;- c(&quot;idno&quot;, &quot;typesamp&quot;, &quot;interva&quot;, &quot;telnum&quot;, &quot;agea_1&quot;, &quot;gendera1&quot;, &quot;type&quot;, &quot;access&quot;, &quot;physa&quot;, &quot;littera&quot;, &quot;vandaa&quot;) resp.id &lt;- c(&quot;idno&quot;) resp.y &lt;- c(&quot;cgtsmke&quot;, &quot;cgtsday&quot;, &quot;alcfreq&quot;, &quot;alcwkdy&quot;, &quot;alcwknd&quot;) resp.x &lt;- c(&quot;vote&quot;, &quot;prtvtbgb&quot;, &quot;prtclbgb&quot;, &quot;prtdgcl&quot;, &quot;ctzcntr&quot;, &quot;ctzshipc&quot;, &quot;brncntr&quot;,&quot;cntbrthc&quot;, &quot;gndr&quot;, &quot;agea&quot;, &quot;hhmmb&quot;,&quot;eisced&quot;, &quot;region&quot;, &quot;pdwrk&quot;, &quot;edctn&quot;, &quot;uempla&quot;, &quot;uempli&quot;, &quot;rtrd&quot;, &quot;wrkctra&quot;, &quot;hinctnta&quot;) We will also keep the variable labels from the SPSS (.sav) file, although these are not so common in R. selected.labels.sample.data &lt;- attributes(sample.data)$variable.labels[which(names(sample.data) %in% vars.sample.data)] selected.labels.paradata &lt;- attributes(paradata)$variable.labels[which(names(paradata) %in% vars.paradata)] selected.labels.responses &lt;- attributes(responses)$variable.labels[which(names(responses) %in% c(resp.y, resp.x))] attributes(responses)$variable.labels %&gt;% cbind(names(responses),.) %&gt;% as_data_frame %&gt;% write_csv(&quot;interim_output/variable_labels.csv&quot;) Now we do the selection of variables from the three data sets using the names of the variables written a couple of code chunks ago. sample.data %&lt;&gt;% .[vars.sample.data] paradata %&lt;&gt;% .[vars.paradata] responses %&lt;&gt;% .[which(names(responses) %in% c(resp.id, resp.y, resp.x))] 2.0.0.3 Merging datafiles After selecting the variables for the analysis, we merge the ‘paradata’ file containing all sampled units (respondents and non-respondents) with the ‘survey responses’ file, containing interview responses (only for respondents). The resulting data_frame is the ‘data’ object. It contains the ‘paradata’ information for all sampled individuals and responses for those that were interviewed successfully. In a real situation where we collect the data ourselves we would also have a ‘survey frame’. This ‘survey frame’ would ideally include include all units from the population and characteristics of these such as stratification variables. A survey frame would include sampled units (respondents and non-respondents) as well as non-sampled units. data &lt;- paradata %&gt;% left_join(sample.data, by = &quot;idno&quot;) %&gt;% left_join(responses, by = &quot;idno&quot;) %&gt;% arrange(interva) rm(paradata, sample.data, responses) Here we add the variable labels to the datasets with we kept before. attributes(data)$variable.labels &lt;- c(selected.labels.paradata, selected.labels.sample.data[!names(selected.labels.sample.data) %in% &quot;idno&quot;], selected.labels.responses) 2.0.0.4 Recoding Here we will recode our two dependent variables: cigarette and alcohol consumption. All those respondents that don’t smoke should have a 0 in the cigarretes smoked per day variable. To calculate the alcohol consumption of respondents, we first calculate the daily consumption of alcohol if they were to consume alcohol daily and then weight by their stated frequency of alcohol consumption. data$cgtsday[data$cgtsmke %in% c(&quot;I have never smoked&quot;, &quot;I don&#39;t smoke now but I used to&quot;, &quot;I have only smoked a few times&quot;)] &lt;- 0 data$alcohol_day &lt;- NA data$alcohol_day &lt;- (data$alcwkdy * 5 + data$alcwknd *2)/7 data$alcohol_day[which(data$alcfreq == &quot;Several times a week&quot;)] &lt;- data$alcohol_day / 2.5 data$alcohol_day[which(data$alcfreq == &quot;Once a week&quot;)] &lt;- data$alcohol_day/7 data$alcohol_day[which(data$alcfreq == &quot;2-3 times a month&quot;)] &lt;- data$alcohol_day/10 data$alcohol_day[which(data$alcfreq == &quot;Once a month&quot;)] &lt;- data$alcohol_day/30 data$alcohol_day[which(data$alcfreq == &quot;Less than once a month&quot;)] &lt;- data$alcohol_day/50 data$alcohol_day[which(data$alcfreq == &quot;Never&quot;)] &lt;- 0 resp.y &lt;- c(resp.y, &quot;alcohol_day&quot;) 2.0.1 Exploring and presenting the dataset The merged data set contains sampled respondents and non-respondents. It contains a total of 5600 units and 39 variables. dim(data) ## [1] 5600 39 The data set contains information about 2265 respondents and 3335 non-respondents. And this is a list of the variables it contains (with their labels). idno is the individual identification variable. data.variables &lt;- cbind(names(data),attributes(data)$variable.labels) %&gt;% as_data_frame() data.variables$V2 &lt;- format(data.variables$V2 , justify = &quot;left&quot;) data.variables %&gt;% print(n = 40) ## # A tibble: 39 x 2 ## V1 V2 ## &lt;chr&gt; &lt;chr&gt; ## 1 idno Respondent&#39;s identification number ## 2 typesamp Type of the sample ## 3 interva Interview information for the sample unit ## 4 telnum Telephone number ## 5 agea_1 Estimation of age of respondent or household member who refuses, by interviewer ## 6 gendera1 Gender of respondent or household member who refuses, recorded by interviewer ## 7 type Type of house respondent lives in ## 8 access Entry phone or locked gate/door before reaching respondent&#39;s individual door ## 9 physa Assessment overall physical condition building/house ## 10 littera Amount of litter and rubbish in the immediate vicinity ## 11 vandaa Amount of vandalism and graffiti in the immediate vicinity ## 12 psu PSU ## 13 prob PROB ## 14 vote Voted last national election ## 15 prtvtbgb Party voted for in last national election, United Kingdom ## 16 prtclbgb Which party feel closer to, United Kingdom ## 17 prtdgcl How close to party ## 18 ctzcntr Citizen of country ## 19 ctzshipc Citizenship ## 20 brncntr Born in country ## 21 cntbrthc Country of birth ## 22 cgtsmke Cigarettes smoking behaviour ## 23 cgtsday How many cigarettes smoke on typical day ## 24 alcfreq How often drink alcohol ## 25 alcwkdy Grams alcohol, last time drinking on a weekday, Monday to Thursday ## 26 alcwknd Grams alcohol, last time drinking on a weekend day, Friday to Sunday ## 27 hhmmb Number of people living regularly as member of household ## 28 gndr Gender ## 29 agea Age of respondent, calculated ## 30 eisced Highest level of education, ES - ISCED ## 31 pdwrk Doing last 7 days: paid work ## 32 edctn Doing last 7 days: education ## 33 uempla Doing last 7 days: unemployed, actively looking for job ## 34 uempli Doing last 7 days: unemployed, not actively looking for job ## 35 rtrd Doing last 7 days: retired ## 36 wrkctra Employment contract unlimited or limited duration ## 37 hinctnta Household&#39;s total net income, all sources ## 38 region Region ## 39 alcohol_day Respondent&#39;s identification number rm(data.variables) The goal of this guide will be to to give UK population estimates for cigarette and alcohol consumption based on ESS respondents. These will be our Y variables or variables of interest. The idea is to give descriptives of the distribution of these two variables (such as quantiles and mean) and then a simple extrapolation and compute total cigarette and alcohol consumption for the whole UK. These are our Y variables: cgtsday : Number of cigarettes smoked on a typical day. alcohol_day : Grams of alcohol ingested on a daily basis. Computed in the Recoding section from the amount of alcohol drank last time during weekdays and weekend. data[resp.y] %&gt;% as_data_frame() %&gt;% print() ## # A tibble: 5,600 x 6 ## cgtsmke cgtsday alcfreq alcwkdy alcwknd alcohol_day ## * &lt;fctr&gt; &lt;dbl&gt; &lt;fctr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 I have never smoked 0 Once a week 0 8 0.32653061 ## 2 I smoke daily 10 Once a week 48 96 8.81632653 ## 3 I have never smoked 0 Several times a week 42 0 0.91428571 ## 4 I have never smoked 0 Never NA NA 0.00000000 ## 5 I smoke daily 20 2-3 times a month 55 0 0.03265306 ## 6 I don&#39;t smoke now but I used to 0 Several times a week 26 32 24.68571429 ## 7 I don&#39;t smoke now but I used to 0 Once a week 17 0 0.13061224 ## 8 I smoke daily 15 Never NA NA 0.00000000 ## 9 I have never smoked 0 Never NA NA 0.00000000 ## 10 I smoke daily 20 Several times a week 42 121 12.00000000 ## # ... with 5,590 more rows 2.0.1.1 Paradata variables The 7th ESS survey contains variables which give information about the data collection process. First, we have some variables that come from the ‘sample data (SDDF)’ file. These contain info about the ‘primary sampling unit’ and the probability of each unit of being selected in the sample. These two variables are only available for respondents. In a real project we would most probably have to compute the probability of being sampled ourselves. psu: This variable includes information on the primary sampling unit (PSU). In the UK this refers to the ‘postcode address file’. prob: Probability of being included in the sample (i.e. approached for survey). data[vars.sample.data] %&gt;% as_data_frame() %&gt;% print() ## # A tibble: 5,600 x 3 ## idno psu prob ## * &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 100000003 9388 0.00020306164 ## 2 100000005 9241 0.00020306164 ## 3 100000008 9472 0.00020306164 ## 4 100000009 9450 0.00005076541 ## 5 100000010 9479 0.00010153082 ## 6 100000012 9460 0.00010153082 ## 7 100000015 9440 0.00010153082 ## 8 100000016 9494 0.00020306164 ## 9 100000017 9376 0.00010153082 ## 10 100000020 9273 0.00010153082 ## # ... with 5,590 more rows The 7th ESS also contains variables for all sampled units (i.e. respondents and non-respondents). These give information about the events that occurred during the data collection process. We will use these variables as covariates during the computation of Non-response weights in step two. typesamp: Refers to the type of unit sampled. In the UK addresses were the final sampling units. In some other countries these were households and individual people. interva: Shows the final outcome of the contact. In the UK sample, only codes ‘Complete …’ and ‘No interview …’ were used for respondents and non-respondents respectively. telnum: The interviewed person gave his/her mobile phone to the interviewer. agea_1: Interviewer estimation of age of respondent or household member who refuses to give the interview. gendera1: Interviewer estimation of gender of respondent or household member who refuses to give the interview. type: Type of house sampled unit lives in. access: Entry phone or locked gate/door before reaching respondent’s individual door. physa: Interviewer assessment overall physical condition building/house. littera: Interviewer assessment of amount of litter and rubbish in the immediate vicinity. vandaa: Interviewer assessment of amount of vandalism and graffiti in the immediate vicinity. data[vars.paradata] %&gt;% head(6) ## idno typesamp interva telnum ## 1 100000003 Address Complete and valid interview related to CF Present ## 2 100000005 Address Complete and valid interview related to CF Present ## 3 100000008 Address Complete and valid interview related to CF Present ## 4 100000009 Address Complete and valid interview related to CF Present ## 5 100000010 Address Complete and valid interview related to CF Present ## 6 100000012 Address Complete and valid interview related to CF Present ## agea_1 gendera1 type access ## 1 &lt;NA&gt; &lt;NA&gt; Single unit: Terraced house No, neither of these ## 2 &lt;NA&gt; &lt;NA&gt; Single unit: Semi-detached house No, neither of these ## 3 &lt;NA&gt; &lt;NA&gt; Single unit: Terraced house Yes, locked gate/door ## 4 &lt;NA&gt; &lt;NA&gt; Single unit: Semi-detached house No, neither of these ## 5 &lt;NA&gt; &lt;NA&gt; Single unit: Terraced house No, neither of these ## 6 &lt;NA&gt; &lt;NA&gt; Single unit: Terraced house No, neither of these ## physa littera vandaa ## 1 Satisfactory Small amount None or almost none ## 2 Good None or almost none None or almost none ## 3 Good None or almost none None or almost none ## 4 Satisfactory Large amount None or almost none ## 5 Satisfactory None or almost none None or almost none ## 6 Very good None or almost none None or almost none 2.0.1.2 Survey responses Apart from the variables of interest (cigarette and alcohol consumption) our dataset has other variables obtained from survey responses. Obviously, these are only available for respondents. We will try to use some of these variables to calibrate the survey in Use of auxiliary data/calibration step. Some of these variables are: vote: Voted last national election (Yes/No) prtvtbgb: Party voted for in last national election prtclbgb: Which party feel closer to, United Kingdom prtdgcl: How close does the repondent feel to the party party from ‘prtclbgb’ ctzcntr: Has UK citizenship (Yes/No) ctzshipc: Citizenship of respondent brncntr:Respondent born in the UK cntbrthc: Respondent country of birth gndr: Gender of respondent agea: Calculated age of respondent eisced: Highest level of education of respondent pdwrk: In paid work edctn: In education uempla: In unemployment, actively looking for a job uempli: In unemployment, not actively looking for a job rtrd: Retired wrkctra: Employment contract unlimited or limited duration hinctnta: Household’s total net income, all sources data[c(resp.id, resp.x)] %&gt;% head(6) ## idno vote prtvtbgb prtclbgb prtdgcl ctzcntr ctzshipc ## 1 100000003 Yes Liberal Democrat &lt;NA&gt; &lt;NA&gt; Yes &lt;NA&gt; ## 2 100000005 Yes Liberal Democrat &lt;NA&gt; &lt;NA&gt; Yes &lt;NA&gt; ## 3 100000008 Yes Labour Labour Not close Yes &lt;NA&gt; ## 4 100000009 Yes Labour &lt;NA&gt; &lt;NA&gt; Yes &lt;NA&gt; ## 5 100000010 No &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; Yes &lt;NA&gt; ## 6 100000012 No &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; Yes &lt;NA&gt; ## brncntr cntbrthc gndr agea hhmmb ## 1 Yes &lt;NA&gt; Female 49 1 ## 2 Yes &lt;NA&gt; Female 45 2 ## 3 Yes &lt;NA&gt; Male 76 1 ## 4 No &lt;NA&gt; Male 50 5 ## 5 Yes &lt;NA&gt; Male 67 2 ## 6 Yes &lt;NA&gt; Female 31 2 ## eisced ## 1 ES-ISCED V2, higher tertiary education, &gt;= MA level ## 2 ES-ISCED V1, lower tertiary education, BA level ## 3 ES-ISCED I , less than lower secondary ## 4 ES-ISCED II, lower secondary ## 5 ES-ISCED I , less than lower secondary ## 6 ES-ISCED IIIa, upper tier upper secondary ## region pdwrk edctn uempla uempli ## 1 West Midlands (England) Marked Not marked Not marked Not marked ## 2 Scotland Marked Not marked Not marked Not marked ## 3 East Midlands (England) Not marked Not marked Not marked Not marked ## 4 South East (England) Not marked Not marked Not marked Not marked ## 5 Yorkshire and the Humber Not marked Not marked Not marked Not marked ## 6 South West (England) Marked Not marked Not marked Not marked ## rtrd wrkctra hinctnta ## 1 Not marked Unlimited M - 4th decile ## 2 Not marked No contract R - 2nd decile ## 3 Marked Unlimited R - 2nd decile ## 4 Not marked Unlimited S - 6th decile ## 5 Marked &lt;NA&gt; J - 1st decile ## 6 Not marked Unlimited F - 5th decile "]
]
